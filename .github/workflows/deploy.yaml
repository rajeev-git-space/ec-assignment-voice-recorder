name: Deploy Voice Recorder Backend

on:
  push:
    branches:
      - qa

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          cd backendServerless
          npm install

      # Step 4: Package Lambda function
      - name: Package Lambda function
        run: |
          cd backendServerless
          zip -r lambda.zip .

      # Step 5: Deploy Lambda function
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Deploy Lambda
        run: |
          aws lambda create-function \
            --function-name VoiceRecorderFunction \
            --runtime nodejs18.x \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_LAMBDA_ROLE }} \
            --handler index.handler \
            --zip-file fileb://backendServerless/lambda.zip || \
          aws lambda update-function-code \
            --function-name VoiceRecorderFunction \
            --zip-file fileb://backendServerless/lambda.zip

      # Step 6: Set up API Gateway
      - name: Set up API Gateway
        run: |
          # Create REST API
          REST_API_ID=$(aws apigateway create-rest-api --name "VoiceRecorderAPI" --query 'id' --output text --region ap-south-1)

          # Get root resource ID
          ROOT_RESOURCE_ID=$(aws apigateway get-resources --rest-api-id $REST_API_ID --query 'items[0].id' --output text --region ap-south-1)

          # Create /audio resource
          AUDIO_RESOURCE_ID=$(aws apigateway create-resource --rest-api-id $REST_API_ID --parent-id $ROOT_RESOURCE_ID --path-part audio --query 'id' --output text --region ap-south-1)

          # Create POST /audio/add
          aws apigateway put-method \
            --rest-api-id $REST_API_ID \
            --resource-id $AUDIO_RESOURCE_ID \
            --http-method POST \
            --authorization-type "NONE" \
            --region ap-south-1

          aws apigateway put-integration \
            --rest-api-id $REST_API_ID \
            --resource-id $AUDIO_RESOURCE_ID \
            --http-method POST \
            --type AWS_PROXY \
            --integration-http-method POST \
            --uri "arn:aws:apigateway:ap-south-1:${{ secrets.AWS_ACCOUNT_ID }}:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:${{ secrets.AWS_ACCOUNT_ID }}:function:VoiceRecorderFunction/invocations" \
            --region ap-south-1

          # Deploy API
          aws apigateway create-deployment \
            --rest-api-id $REST_API_ID \
            --stage-name dev \
            --region ap-south-1

          echo "API Gateway endpoint: https://${REST_API_ID}.execute-api.ap-south-1.amazonaws.com/dev/audio/add"
